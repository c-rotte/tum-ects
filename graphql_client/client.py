# Generated by ariadne-codegen on 2023-06-07 10:25
# Source: schema/queries.graphql

from .async_base_client import AsyncBaseClient
from .get_degree_by_i_d import GetDegreeByID
from .get_module_by_i_d import GetModuleByID
from .input_types import DegreeInput, ModuleInput
from .update_degree import UpdateDegree
from .update_module import UpdateModule


def gql(q: str) -> str:
    return q


class Client(AsyncBaseClient):
    async def get_module_by_i_d(self, id: str) -> GetModuleByID:
        query = gql(
            """
            query GetModuleByID($id: ID!) {
              module(id: $id) {
                id
                label
                information_en {
                  title
                  number
                  module_type
                }
                information_de {
                  title
                  number
                  module_type
                }
              }
            }
            """
        )
        variables: dict[str, object] = {"id": id}
        response = await self.execute(query=query, variables=variables)
        data = self.get_data(response)
        return GetModuleByID.parse_obj(data)

    async def get_degree_by_i_d(self, id: str) -> GetDegreeByID:
        query = gql(
            """
            query GetDegreeByID($id: ID!) {
              degree(id: $id) {
                id
                number
                full_name_en
                full_name_de
                version
                modules {
                  module {
                    id
                    label
                  }
                  version
                  ects
                  weighting_factor
                  valid_from
                  valid_until
                }
              }
            }
            """
        )
        variables: dict[str, object] = {"id": id}
        response = await self.execute(query=query, variables=variables)
        data = self.get_data(response)
        return GetDegreeByID.parse_obj(data)

    async def update_degree(self, degree_input: DegreeInput) -> UpdateDegree:
        query = gql(
            """
            mutation UpdateDegree($degreeInput: DegreeInput!) {
              updateDegree(degreeInput: $degreeInput) {
                id
                number
                full_name_en
                full_name_de
                version
              }
            }
            """
        )
        variables: dict[str, object] = {"degreeInput": degree_input}
        response = await self.execute(query=query, variables=variables)
        data = self.get_data(response)
        return UpdateDegree.parse_obj(data)

    async def update_module(self, module_input: ModuleInput) -> UpdateModule:
        query = gql(
            """
            mutation UpdateModule($moduleInput: ModuleInput!) {
              updateModule(moduleInput: $moduleInput) {
                id
                label
                information_en {
                  title
                  number
                  module_type
                }
                information_de {
                  title
                  number
                  module_type
                }
              }
            }
            """
        )
        variables: dict[str, object] = {"moduleInput": module_input}
        response = await self.execute(query=query, variables=variables)
        data = self.get_data(response)
        return UpdateModule.parse_obj(data)
